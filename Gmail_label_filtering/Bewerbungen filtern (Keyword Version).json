{
  "name": "Bewerbungen filtern (Keyword Version)",
  "nodes": [
    {
      "parameters": {},
      "id": "42d7af84-0e75-49c2-926f-1ae3c168e210",
      "name": "Cron Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -1200,
        1184
      ]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "getAll",
        "additionalFields": {
          "labelIds": [
            "INBOX"
          ],
          "q": "is:unread"
        }
      },
      "id": "8dec7423-dd7a-4248-a80e-4f6fe04769aa",
      "name": "Get Unread Emails",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [
        -992,
        1184
      ],
      "retryOnFail": true,
      "credentials": {
        "gmailOAuth2": {
          "id": "YOUR_GMAIL_OAUTH2_CREDENTIAL_ID",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.headers.subject }}",
              "operation": "contains",
              "value2": "Bewerbung"
            }
          ]
        }
      },
      "id": "ca639797-0f11-460d-ad48-a326ef6c9e45",
      "name": "IF Bewerbung",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -800,
        1184
      ]
    },
    {
      "parameters": {
        "resource": "label",
        "operation": "getAll"
      },
      "id": "42a6ff7e-6ce2-4d7b-a1e3-1b664e5e4666",
      "name": "Get Labels",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [
        -624,
        1088
      ],
      "credentials": {
        "gmailOAuth2": {
          "id": "YOUR_GMAIL_OAUTH2_CREDENTIAL_ID",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const labels = $input.all(); \n\nconst emailId = $('IF Bewerbung').first().json.id\nconst labelItem = labels.find(item => item.json.name === \"Bewerbungen\");\n\n// Check if it exists\nconst exists = !!labelItem;\n\n// --- Return the merged data ---\nreturn [{\n  json: {\n    labelExists: exists,\n    // Safely get the label ID if the label was found\n    labelId: labelItem ? labelItem.json.id : null,\n    // Add the correctly extracted email ID\n    emailId: emailId\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -448,
        1088
      ],
      "id": "28f9a11a-2171-4709-b2c8-5ca44cdb42d7",
      "name": "Get label_id and email_id"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.labelExists}}",
              "operation": "regex",
              "value2": "true"
            }
          ]
        }
      },
      "id": "b541e3ba-6322-4a18-89a6-6f807b8a88d6",
      "name": "IF Label Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -272,
        1088
      ]
    },
    {
      "parameters": {
        "resource": "label",
        "name": "Bewerbungen"
      },
      "id": "cc5f70c6-5b06-4492-8469-7c3ea35e90a4",
      "name": "Create 'Bewerbungen' Label",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [
        -96,
        1200
      ],
      "retryOnFail": true,
      "credentials": {
        "gmailOAuth2": {
          "id": "YOUR_GMAIL_OAUTH2_CREDENTIAL_ID",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $json.emailId }}",
        "labelIds": [
          "={{ $json.labelId }}"
        ]
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        80,
        1072
      ],
      "id": "07c9e486-ce49-4348-8d9a-fe9571b0fb90",
      "name": "Add new label to email",
      "webhookId": "YOUR_WEBHOOK_ID_1",
      "credentials": {
        "gmailOAuth2": {
          "id": "YOUR_GMAIL_OAUTH2_CREDENTIAL_ID",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "removeLabels",
        "messageId": "={{ $('IF Label Exists').item.json.emailId }}",
        "labelIds": [
          "INBOX"
        ]
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        320,
        1184
      ],
      "id": "f767095e-cd0f-4d64-8103-c251825c881f",
      "name": "Remove old label from email",
      "webhookId": "YOUR_WEBHOOK_ID_2",
      "credentials": {
        "gmailOAuth2": {
          "id": "YOUR_GMAIL_OAUTH2_CREDENTIAL_ID",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Gmail API\n**Add credential**"
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1056,
        1008
      ],
      "typeVersion": 1,
      "id": "ede2bf3f-4b07-4b0f-9112-d6a42390a61a",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Gmail Application Management Workflow\n\n## Purpose\nAutomate job application email management without the costs of AI-powered email agents.\n\n## Workflow Description\nThis n8n workflow automatically filters and organizes job applications in Gmail using keyword detection and label management.\n\n\n\n## How It Works\n\n### 1. Initial Trigger & Email Fetching\n- **Cron Trigger**: Starts the workflow at scheduled intervals\n- **Get Unread Emails**: Fetches all unread messages from Gmail inbox\n\n### 2. Application Detection\n- **IF Bewerbung Node**: \n  - Checks email subjects for \"Bewerbung\" keyword\n  - Routes matching emails for further processing\n\n### 3. Label Management Process\n- **Get Labels**: Retrieves all existing Gmail labels\n- **Label Check**:\n  - Verifies if \"Bewerbungen\" label exists\n  - Creates label if not found\n  - Applies label to matching emails\n  - Removes inbox label to declutter main inbox\n\n### 4. Email Organization\n- Adds \"Bewerbungen\" label to application emails\n- Removes \"INBOX\" label to move emails out of inbox\n- Maintains organized application tracking\n\n## Technical Requirements\n- Gmail account with OAuth2 authentication\n- n8n installation with Gmail credentials\n- Automated label creation capability\n\n",
        "height": 1016,
        "width": 780
      },
      "id": "4ec1e042-cfa0-492e-aad3-8a2bad5944d6",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        496,
        752
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "Cron Trigger": {
      "main": [
        [
          {
            "node": "Get Unread Emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Unread Emails": {
      "main": [
        [
          {
            "node": "IF Bewerbung",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Bewerbung": {
      "main": [
        [
          {
            "node": "Get Labels",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Labels": {
      "main": [
        [
          {
            "node": "Get label_id and email_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get label_id and email_id": {
      "main": [
        [
          {
            "node": "IF Label Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Label Exists": {
      "main": [
        [
          {
            "node": "Add new label to email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create 'Bewerbungen' Label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create 'Bewerbungen' Label": {
      "main": [
        [
          {
            "node": "Add new label to email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add new label to email": {
      "main": [
        [
          {
            "node": "Remove old label from email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove old label from email": {
      "main": [
        [
          {
            "node": "Get Unread Emails",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "YOUR_VERSION_ID",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "YOUR_INSTANCE_ID"
  },
  "id": "YOUR_WORKFLOW_ID",
  "tags": []
}